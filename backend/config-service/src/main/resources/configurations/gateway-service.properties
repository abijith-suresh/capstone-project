# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${random.value}

# Server Port
server.port=9090

# Spring Application Name
spring.application.name=gateway-service

# Spring Cloud Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true

# Gateway Routes Configuration
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=http://localhost:9000
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[1].id=booking-service
spring.cloud.gateway.routes[1].uri=http://localhost:9001
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/booking/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[2].id=customer-service
spring.cloud.gateway.routes[2].uri=http://localhost:9002
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/customer/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[3].id=message-service
spring.cloud.gateway.routes[3].uri=http://localhost:9003
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/messages/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[4].id=review-service
spring.cloud.gateway.routes[4].uri=http://localhost:9004
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/reviews/**
spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter

spring.cloud.gateway.routes[5].id=specialist-service
spring.cloud.gateway.routes[5].uri=http://localhost:9005
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/specialist/**
spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter